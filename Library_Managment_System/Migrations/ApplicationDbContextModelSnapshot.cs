// <auto-generated />
using System;
using Library_Managment_System.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Managment_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library_Managment_System.Models.Books", b =>
                {
                    b.Property<int>("book_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("book_id"));

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("available_copies")
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<int?>("category_id1")
                        .HasColumnType("int");

                    b.Property<string>("isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("book_id");

                    b.HasIndex("category_id1");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Categories", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_id"));

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Members", b =>
                {
                    b.Property<int>("member_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("member_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("membership_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("member_id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Staff", b =>
                {
                    b.Property<int>("staff_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staff_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("staff_id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Transactions", b =>
                {
                    b.Property<int>("transaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transaction_id"));

                    b.Property<int?>("book_id")
                        .HasColumnType("int");

                    b.Property<int?>("book_id1")
                        .HasColumnType("int");

                    b.Property<DateTime>("due_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("issue_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("member_id")
                        .HasColumnType("int");

                    b.Property<int?>("member_id1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("return_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("staff_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transaction_id");

                    b.HasIndex("book_id1");

                    b.HasIndex("member_id1");

                    b.HasIndex("staff_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Books", b =>
                {
                    b.HasOne("Library_Managment_System.Models.Categories", "Category")
                        .WithMany("Books")
                        .HasForeignKey("category_id1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Transactions", b =>
                {
                    b.HasOne("Library_Managment_System.Models.Books", "book")
                        .WithMany("transactions")
                        .HasForeignKey("book_id1");

                    b.HasOne("Library_Managment_System.Models.Members", "member")
                        .WithMany("transactions")
                        .HasForeignKey("member_id1");

                    b.HasOne("Library_Managment_System.Models.Staff", null)
                        .WithMany("transactions")
                        .HasForeignKey("staff_id");

                    b.Navigation("book");

                    b.Navigation("member");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Books", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Categories", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Members", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("Library_Managment_System.Models.Staff", b =>
                {
                    b.Navigation("transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
